ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Blink.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "./libDaisy/src/daisy_seed.h"
   1:./libDaisy/src/daisy_seed.h **** #pragma once
   2:./libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:./libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:./libDaisy/src/daisy_seed.h **** 
   5:./libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:./libDaisy/src/daisy_seed.h **** 
   7:./libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:./libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:./libDaisy/src/daisy_seed.h **** 
  10:./libDaisy/src/daisy_seed.h **** namespace daisy
  11:./libDaisy/src/daisy_seed.h **** {
  12:./libDaisy/src/daisy_seed.h **** /**
  13:./libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:./libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:./libDaisy/src/daisy_seed.h **** 
  16:./libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:./libDaisy/src/daisy_seed.h **** */
  18:./libDaisy/src/daisy_seed.h **** class DaisySeed
  19:./libDaisy/src/daisy_seed.h **** {
  20:./libDaisy/src/daisy_seed.h ****   public:
  21:./libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:./libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB71:
  36              	.LBI71:
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 2


  37              		.file 2 "./libDaisy/src/sys/system.h"
   1:./libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:./libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:./libDaisy/src/sys/system.h **** 
   4:./libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:./libDaisy/src/sys/system.h **** 
   6:./libDaisy/src/sys/system.h **** #include <cstdint>
   7:./libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:./libDaisy/src/sys/system.h **** 
   9:./libDaisy/src/sys/system.h **** namespace daisy
  10:./libDaisy/src/sys/system.h **** {
  11:./libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:./libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:./libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:./libDaisy/src/sys/system.h ****  **
  15:./libDaisy/src/sys/system.h ****  ** @author shensley
  16:./libDaisy/src/sys/system.h ****  ** @ingroup system
  17:./libDaisy/src/sys/system.h ****  */
  18:./libDaisy/src/sys/system.h **** class System
  19:./libDaisy/src/sys/system.h **** {
  20:./libDaisy/src/sys/system.h ****   public:
  21:./libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:./libDaisy/src/sys/system.h ****     struct Config
  23:./libDaisy/src/sys/system.h ****     {
  24:./libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:./libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:./libDaisy/src/sys/system.h ****         {
  27:./libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:./libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:./libDaisy/src/sys/system.h ****         };
  30:./libDaisy/src/sys/system.h **** 
  31:./libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:./libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:./libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:./libDaisy/src/sys/system.h ****          ** */
  35:./libDaisy/src/sys/system.h ****         void Defaults()
  36:./libDaisy/src/sys/system.h ****         {
  37:./libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:./libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:./libDaisy/src/sys/system.h ****             use_icache  = true;
  40:./libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:./libDaisy/src/sys/system.h ****         }
  42:./libDaisy/src/sys/system.h **** 
  43:./libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:./libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:./libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:./libDaisy/src/sys/system.h ****          ** */
  47:./libDaisy/src/sys/system.h ****         void Boost()
  48:./libDaisy/src/sys/system.h ****         {
  49:./libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:./libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:./libDaisy/src/sys/system.h ****             use_icache  = true;
  52:./libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:./libDaisy/src/sys/system.h ****         }
  54:./libDaisy/src/sys/system.h **** 
  55:./libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:./libDaisy/src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 3


  57:./libDaisy/src/sys/system.h ****         bool       use_icache;
  58:./libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:./libDaisy/src/sys/system.h ****     };
  60:./libDaisy/src/sys/system.h **** 
  61:./libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:./libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:./libDaisy/src/sys/system.h ****     {
  64:./libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:./libDaisy/src/sys/system.h ****         ITCMRAM,
  66:./libDaisy/src/sys/system.h ****         DTCMRAM,
  67:./libDaisy/src/sys/system.h ****         SRAM_D1,
  68:./libDaisy/src/sys/system.h ****         SRAM_D2,
  69:./libDaisy/src/sys/system.h ****         SRAM_D3,
  70:./libDaisy/src/sys/system.h ****         SDRAM,
  71:./libDaisy/src/sys/system.h ****         QSPI,
  72:./libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:./libDaisy/src/sys/system.h ****     };
  74:./libDaisy/src/sys/system.h **** 
  75:./libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:./libDaisy/src/sys/system.h ****     struct BootInfo
  77:./libDaisy/src/sys/system.h ****     {
  78:./libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:./libDaisy/src/sys/system.h ****         {
  80:./libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:./libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:./libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:./libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:./libDaisy/src/sys/system.h ****         } status;
  85:./libDaisy/src/sys/system.h ****         uint32_t data;
  86:./libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:./libDaisy/src/sys/system.h ****         {
  88:./libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:./libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:./libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:./libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:./libDaisy/src/sys/system.h ****             LAST
  93:./libDaisy/src/sys/system.h ****         } version;
  94:./libDaisy/src/sys/system.h ****     };
  95:./libDaisy/src/sys/system.h **** 
  96:./libDaisy/src/sys/system.h ****     System() {}
  97:./libDaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE71:
  41              	.LBB72:
  42              	.LBI72:
  43              		.file 3 "./libDaisy/src/hid/usb.h"
   1:./libDaisy/src/hid/usb.h **** #pragma once
   2:./libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:./libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:./libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:./libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:./libDaisy/src/hid/usb.h **** 
   7:./libDaisy/src/hid/usb.h **** namespace daisy
   8:./libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:./libDaisy/src/hid/usb.h ****     @{
  10:./libDaisy/src/hid/usb.h **** */
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 4


  11:./libDaisy/src/hid/usb.h **** 
  12:./libDaisy/src/hid/usb.h **** {
  13:./libDaisy/src/hid/usb.h **** /** 
  14:./libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:./libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:./libDaisy/src/hid/usb.h ****     @date December 2019
  17:./libDaisy/src/hid/usb.h **** */
  18:./libDaisy/src/hid/usb.h **** class UsbHandle
  19:./libDaisy/src/hid/usb.h **** {
  20:./libDaisy/src/hid/usb.h ****   public:
  21:./libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:./libDaisy/src/hid/usb.h ****     enum class Result
  23:./libDaisy/src/hid/usb.h ****     {
  24:./libDaisy/src/hid/usb.h ****         OK,
  25:./libDaisy/src/hid/usb.h ****         ERR,
  26:./libDaisy/src/hid/usb.h ****     };
  27:./libDaisy/src/hid/usb.h **** 
  28:./libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:./libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:./libDaisy/src/hid/usb.h ****     {
  31:./libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:./libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:./libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:./libDaisy/src/hid/usb.h ****     };
  35:./libDaisy/src/hid/usb.h **** 
  36:./libDaisy/src/hid/usb.h **** 
  37:./libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:./libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:./libDaisy/src/hid/usb.h **** 
  40:./libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:./libDaisy/src/hid/usb.h **** 
  42:./libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE72:
  47              	.LBB73:
  48              	.LBI73:
  49              		.file 4 "./libDaisy/src/per/adc.h"
   1:./libDaisy/src/per/adc.h **** #pragma once
   2:./libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:./libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:./libDaisy/src/per/adc.h **** #include <stdint.h>
   5:./libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:./libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:./libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:./libDaisy/src/per/adc.h **** 
   9:./libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:./libDaisy/src/per/adc.h **** 
  11:./libDaisy/src/per/adc.h **** namespace daisy
  12:./libDaisy/src/per/adc.h **** {
  13:./libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:./libDaisy/src/per/adc.h ****     @{
  15:./libDaisy/src/per/adc.h **** */
  16:./libDaisy/src/per/adc.h **** 
  17:./libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:./libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:./libDaisy/src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 5


  20:./libDaisy/src/per/adc.h **** */
  21:./libDaisy/src/per/adc.h **** 
  22:./libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:./libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:./libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:./libDaisy/src/per/adc.h ****  *           one channel.
  26:./libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:./libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:./libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:./libDaisy/src/per/adc.h ****  *           inputs connected.
  30:./libDaisy/src/per/adc.h **** */
  31:./libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:./libDaisy/src/per/adc.h **** {
  33:./libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:./libDaisy/src/per/adc.h ****     enum MuxPin
  35:./libDaisy/src/per/adc.h ****     {
  36:./libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:./libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:./libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:./libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:./libDaisy/src/per/adc.h ****     };
  41:./libDaisy/src/per/adc.h **** 
  42:./libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:./libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:./libDaisy/src/per/adc.h ****     {
  45:./libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:./libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:./libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:./libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:./libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:./libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:./libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:./libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:./libDaisy/src/per/adc.h ****     };
  54:./libDaisy/src/per/adc.h **** 
  55:./libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:./libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:./libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:./libDaisy/src/per/adc.h ****      */
  59:./libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:./libDaisy/src/per/adc.h **** 
  61:./libDaisy/src/per/adc.h ****     /** 
  62:./libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:./libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:./libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:./libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:./libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:./libDaisy/src/per/adc.h ****     \param adc_pin &
  68:./libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:./libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:./libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:./libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:./libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:./libDaisy/src/per/adc.h ****     */
  74:./libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:./libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:./libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 6


  77:./libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:./libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:./libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:./libDaisy/src/per/adc.h **** 
  81:./libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:./libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:./libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:./libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:./libDaisy/src/per/adc.h **** };
  86:./libDaisy/src/per/adc.h **** 
  87:./libDaisy/src/per/adc.h **** /**
  88:./libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:./libDaisy/src/per/adc.h **** */
  90:./libDaisy/src/per/adc.h **** class AdcHandle
  91:./libDaisy/src/per/adc.h **** {
  92:./libDaisy/src/per/adc.h ****   public:
  93:./libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:./libDaisy/src/per/adc.h ****     enum OverSampling
  95:./libDaisy/src/per/adc.h ****     {
  96:./libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:./libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:./libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:./libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:./libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:./libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:./libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:./libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:./libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:./libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:./libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:./libDaisy/src/per/adc.h ****     };
 108:./libDaisy/src/per/adc.h **** 
 109:./libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:./libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE73:
  53              	.LBB74:
  54              	.LBI74:
  55              		.file 5 "./libDaisy/src/hid/audio.h"
   1:./libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:./libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:./libDaisy/src/hid/audio.h **** 
   4:./libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:./libDaisy/src/hid/audio.h **** 
   6:./libDaisy/src/hid/audio.h **** namespace daisy
   7:./libDaisy/src/hid/audio.h **** {
   8:./libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:./libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:./libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:./libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:./libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:./libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:./libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:./libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:./libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:./libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 7


  18:./libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:./libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:./libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:./libDaisy/src/hid/audio.h ****  */
  22:./libDaisy/src/hid/audio.h **** class AudioHandle
  23:./libDaisy/src/hid/audio.h **** {
  24:./libDaisy/src/hid/audio.h ****   public:
  25:./libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:./libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:./libDaisy/src/hid/audio.h ****     struct Config
  28:./libDaisy/src/hid/audio.h ****     {
  29:./libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:./libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:./libDaisy/src/hid/audio.h **** 
  32:./libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:./libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:./libDaisy/src/hid/audio.h **** 
  35:./libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:./libDaisy/src/hid/audio.h ****         float postgain;
  37:./libDaisy/src/hid/audio.h **** 
  38:./libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:./libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:./libDaisy/src/hid/audio.h ****          */
  41:./libDaisy/src/hid/audio.h ****         float output_compensation;
  42:./libDaisy/src/hid/audio.h **** 
  43:./libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:./libDaisy/src/hid/audio.h ****         Config()
  45:./libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:./libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:./libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:./libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:./libDaisy/src/hid/audio.h ****         {
  50:./libDaisy/src/hid/audio.h ****         }
  51:./libDaisy/src/hid/audio.h ****     };
  52:./libDaisy/src/hid/audio.h **** 
  53:./libDaisy/src/hid/audio.h ****     enum class Result
  54:./libDaisy/src/hid/audio.h ****     {
  55:./libDaisy/src/hid/audio.h ****         OK,
  56:./libDaisy/src/hid/audio.h ****         ERR,
  57:./libDaisy/src/hid/audio.h ****     };
  58:./libDaisy/src/hid/audio.h **** 
  59:./libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:./libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:./libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:./libDaisy/src/hid/audio.h ****      */
  63:./libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:./libDaisy/src/hid/audio.h **** 
  65:./libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:./libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:./libDaisy/src/hid/audio.h ****      */
  68:./libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:./libDaisy/src/hid/audio.h **** 
  70:./libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:./libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:./libDaisy/src/hid/audio.h ****      */
  73:./libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:./libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 8


  75:./libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:./libDaisy/src/hid/audio.h **** 
  77:./libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:./libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:./libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:./libDaisy/src/hid/audio.h ****     */
  81:./libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:./libDaisy/src/hid/audio.h **** 
  83:./libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:./libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:./libDaisy/src/hid/audio.h ****     */
  86:./libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:./libDaisy/src/hid/audio.h **** 
  88:./libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:./libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:./libDaisy/src/hid/audio.h ****      */
  91:./libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:./libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:./libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:./libDaisy/src/hid/audio.h **** 
  95:./libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:./libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE74:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text.startup.main,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	main
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	main:
  76              	.LFB2560:
  77              		.file 6 "Blink.cpp"
   1:Blink.cpp     **** #include "daisy_seed.h"
   2:Blink.cpp     **** 
   3:Blink.cpp     **** // Use the daisy namespace to prevent having to type
   4:Blink.cpp     **** // daisy:: before all libdaisy functions
   5:Blink.cpp     **** using namespace daisy;
   6:Blink.cpp     **** 
   7:Blink.cpp     **** // Declare a DaisySeed object called hardware
   8:Blink.cpp     **** DaisySeed hardware;
   9:Blink.cpp     **** 
  10:Blink.cpp     **** int main(void)
  11:Blink.cpp     **** {
  78              		.loc 6 11 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 9


  12:Blink.cpp     ****     // Declare a variable to store the state we want to set for the LED.
  13:Blink.cpp     ****     bool led_state;
  82              		.loc 6 13 5 view .LVU11
  14:Blink.cpp     ****     led_state = true;
  83              		.loc 6 14 5 view .LVU12
  84              	.LVL1:
  15:Blink.cpp     **** 
  16:Blink.cpp     ****     // Configure and Initialize the Daisy Seed
  17:Blink.cpp     ****     // These are separate to allow reconfiguration of any of the internal
  18:Blink.cpp     ****     // components before initialization.
  19:Blink.cpp     ****     hardware.Configure();
  85              		.loc 6 19 5 view .LVU13
  86              		.loc 6 19 23 is_stmt 0 view .LVU14
  87 0000 0948     		ldr	r0, .L6
  11:Blink.cpp     ****     // Declare a variable to store the state we want to set for the LED.
  88              		.loc 6 11 1 view .LVU15
  89 0002 10B5     		push	{r4, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93              		.loc 6 19 23 view .LVU16
  94 0004 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
  95              	.LVL2:
  20:Blink.cpp     ****     hardware.Init();
  96              		.loc 6 20 5 is_stmt 1 view .LVU17
  97              		.loc 6 20 18 is_stmt 0 view .LVU18
  98 0008 0021     		movs	r1, #0
  99 000a 0748     		ldr	r0, .L6
  14:Blink.cpp     **** 
 100              		.loc 6 14 15 view .LVU19
 101 000c 0124     		movs	r4, #1
 102              		.loc 6 20 18 view .LVU20
 103 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 104              	.LVL3:
 105              	.L4:
  21:Blink.cpp     **** 
  22:Blink.cpp     ****     // Loop forever
  23:Blink.cpp     ****     for(;;)
 106              		.loc 6 23 5 is_stmt 1 discriminator 1 view .LVU21
  24:Blink.cpp     ****     {
  25:Blink.cpp     ****         // Set the onboard LED
  26:Blink.cpp     ****         hardware.SetLed(led_state);
 107              		.loc 6 26 9 discriminator 1 view .LVU22
 108              		.loc 6 26 24 is_stmt 0 discriminator 1 view .LVU23
 109 0012 2146     		mov	r1, r4
 110 0014 0448     		ldr	r0, .L6
 111 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 112              	.LVL4:
  27:Blink.cpp     **** 
  28:Blink.cpp     ****         // Toggle the LED state for the next time around.
  29:Blink.cpp     ****         led_state = !led_state;
 113              		.loc 6 29 9 is_stmt 1 discriminator 1 view .LVU24
  30:Blink.cpp     **** 
  31:Blink.cpp     ****         // Wait 500ms
  32:Blink.cpp     ****         System::Delay(500);
 114              		.loc 6 32 22 is_stmt 0 discriminator 1 view .LVU25
 115 001a 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 10


  29:Blink.cpp     **** 
 116              		.loc 6 29 19 discriminator 1 view .LVU26
 117 001e 84F00104 		eor	r4, r4, #1
 118              	.LVL5:
 119              		.loc 6 32 9 is_stmt 1 discriminator 1 view .LVU27
 120              		.loc 6 32 22 is_stmt 0 discriminator 1 view .LVU28
 121 0022 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 122              	.LVL6:
  23:Blink.cpp     ****     {
 123              		.loc 6 23 5 is_stmt 1 discriminator 1 view .LVU29
 124 0026 F4E7     		b	.L4
 125              	.L7:
 126              		.align	2
 127              	.L6:
 128 0028 00000000 		.word	.LANCHOR0
 129              		.cfi_endproc
 130              	.LFE2560:
 132              		.section	.text.startup._GLOBAL__sub_I_hardware,"ax",%progbits
 133              		.align	1
 134              		.p2align 2,,3
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv5-d16
 140              	_GLOBAL__sub_I_hardware:
 141              	.LFB2579:
  33:Blink.cpp     ****     }
  34:Blink.cpp     **** }
 142              		.loc 6 34 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147              	.LBB96:
 148              	.LBI96:
 149              		.loc 6 34 1 view .LVU31
 150              	.LVL7:
 151              	.LBB97:
 152              	.LBB98:
 153              	.LBI98:
  21:./libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 154              		.loc 1 21 5 view .LVU32
 155              	.LBB99:
 156              	.LBB100:
 157              	.LBI100:
 158              		.file 7 "./libDaisy/src/per/qspi.h"
   1:./libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:./libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:./libDaisy/src/per/qspi.h **** 
   4:./libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:./libDaisy/src/per/qspi.h **** 
   6:./libDaisy/src/per/qspi.h **** #include <cstdint>
   7:./libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:./libDaisy/src/per/qspi.h **** 
   9:./libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:./libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:./libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 11


  12:./libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:./libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:./libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:./libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:./libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:./libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:./libDaisy/src/per/qspi.h **** 
  19:./libDaisy/src/per/qspi.h **** namespace daisy
  20:./libDaisy/src/per/qspi.h **** {
  21:./libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:./libDaisy/src/per/qspi.h **** @{
  23:./libDaisy/src/per/qspi.h **** */
  24:./libDaisy/src/per/qspi.h **** 
  25:./libDaisy/src/per/qspi.h **** /** 
  26:./libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:./libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:./libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:./libDaisy/src/per/qspi.h **** */
  30:./libDaisy/src/per/qspi.h **** class QSPIHandle
  31:./libDaisy/src/per/qspi.h **** {
  32:./libDaisy/src/per/qspi.h ****   public:
  33:./libDaisy/src/per/qspi.h ****     enum Result
  34:./libDaisy/src/per/qspi.h ****     {
  35:./libDaisy/src/per/qspi.h ****         OK = 0,
  36:./libDaisy/src/per/qspi.h ****         ERR
  37:./libDaisy/src/per/qspi.h ****     };
  38:./libDaisy/src/per/qspi.h **** 
  39:./libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:./libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:./libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:./libDaisy/src/per/qspi.h ****          * 
  43:./libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:./libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:./libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:./libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:./libDaisy/src/per/qspi.h ****          */
  48:./libDaisy/src/per/qspi.h ****     enum Status
  49:./libDaisy/src/per/qspi.h ****     {
  50:./libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:./libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:./libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:./libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:./libDaisy/src/per/qspi.h ****     };
  55:./libDaisy/src/per/qspi.h **** 
  56:./libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:./libDaisy/src/per/qspi.h ****     struct Config
  58:./libDaisy/src/per/qspi.h ****     {
  59:./libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:./libDaisy/src/per/qspi.h ****         enum Device
  61:./libDaisy/src/per/qspi.h ****         {
  62:./libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:./libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:./libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:./libDaisy/src/per/qspi.h ****         };
  66:./libDaisy/src/per/qspi.h **** 
  67:./libDaisy/src/per/qspi.h ****         /** 
  68:./libDaisy/src/per/qspi.h ****         Modes of operation.
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 12


  69:./libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:./libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:./libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:./libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:./libDaisy/src/per/qspi.h ****         */
  74:./libDaisy/src/per/qspi.h ****         enum Mode
  75:./libDaisy/src/per/qspi.h ****         {
  76:./libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:./libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:./libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:./libDaisy/src/per/qspi.h ****         };
  80:./libDaisy/src/per/qspi.h **** 
  81:./libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:./libDaisy/src/per/qspi.h ****         struct
  83:./libDaisy/src/per/qspi.h ****         {
  84:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:./libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:./libDaisy/src/per/qspi.h ****         } pin_config;
  91:./libDaisy/src/per/qspi.h **** 
  92:./libDaisy/src/per/qspi.h ****         Device device;
  93:./libDaisy/src/per/qspi.h ****         Mode   mode;
  94:./libDaisy/src/per/qspi.h ****     };
  95:./libDaisy/src/per/qspi.h **** 
  96:./libDaisy/src/per/qspi.h ****     /** 
  97:./libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:./libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:./libDaisy/src/per/qspi.h ****         */
 101:./libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:./libDaisy/src/per/qspi.h **** 
 103:./libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:./libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:./libDaisy/src/per/qspi.h **** 
 106:./libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:./libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:./libDaisy/src/per/qspi.h ****     /** 
 109:./libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:./libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:./libDaisy/src/per/qspi.h ****         */
 113:./libDaisy/src/per/qspi.h ****     Result DeInit();
 114:./libDaisy/src/per/qspi.h **** 
 115:./libDaisy/src/per/qspi.h ****     /** 
 116:./libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:./libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:./libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:./libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:./libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:./libDaisy/src/per/qspi.h ****         */
 123:./libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:./libDaisy/src/per/qspi.h **** 
 125:./libDaisy/src/per/qspi.h ****     /** 
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 13


 126:./libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:./libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:./libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:./libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:./libDaisy/src/per/qspi.h ****         */
 132:./libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:./libDaisy/src/per/qspi.h **** 
 134:./libDaisy/src/per/qspi.h ****     /** 
 135:./libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:./libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:./libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:./libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:./libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:./libDaisy/src/per/qspi.h ****         */
 142:./libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:./libDaisy/src/per/qspi.h **** 
 144:./libDaisy/src/per/qspi.h ****     /**  
 145:./libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:./libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:./libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:./libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:./libDaisy/src/per/qspi.h ****         */
 150:./libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:./libDaisy/src/per/qspi.h **** 
 152:./libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:./libDaisy/src/per/qspi.h ****      *  \returns Status
 154:./libDaisy/src/per/qspi.h ****      */
 155:./libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:./libDaisy/src/per/qspi.h **** 
 157:./libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:./libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:./libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:./libDaisy/src/per/qspi.h ****      * 
 161:./libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:./libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:./libDaisy/src/per/qspi.h ****     */
 164:./libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:./libDaisy/src/per/qspi.h **** 
 166:./libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 159              		.loc 7 166 5 view .LVU33
 160              	.LBB101:
 161              	.LBB102:
 162              		.loc 7 166 34 is_stmt 0 view .LVU34
 163 0000 0448     		ldr	r0, .L9
 164 0002 0023     		movs	r3, #0
 165              	.LBE102:
 166              	.LBE101:
 167              	.LBE100:
 168              	.LBE99:
 169              	.LBE98:
   8:Blink.cpp     **** 
 170              		.loc 6 8 11 view .LVU35
 171 0004 044A     		ldr	r2, .L9+4
 172 0006 0549     		ldr	r1, .L9+8
 173              	.LBB119:
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 14


 174              	.LBB118:
 175              	.LBB105:
 176              	.LBB104:
 177              	.LBB103:
 178              		.loc 7 166 34 view .LVU36
 179 0008 0360     		str	r3, [r0]
 180              	.LVL8:
 181              		.loc 7 166 34 view .LVU37
 182              	.LBE103:
 183              	.LBE104:
 184              	.LBE105:
 185              	.LBB106:
 186              	.LBI106:
  95:./libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 187              		.loc 5 95 5 is_stmt 1 view .LVU38
 188              	.LBB107:
 189              	.LBB108:
  95:./libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 190              		.loc 5 95 35 is_stmt 0 view .LVU39
 191 000a 4361     		str	r3, [r0, #20]
 192              	.LVL9:
  95:./libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 193              		.loc 5 95 35 view .LVU40
 194              	.LBE108:
 195              	.LBE107:
 196              	.LBE106:
 197              	.LBB109:
 198              	.LBI109:
 109:./libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 199              		.loc 4 109 5 is_stmt 1 view .LVU41
 109:./libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 200              		.loc 4 109 5 is_stmt 0 view .LVU42
 201              	.LBE109:
 202              	.LBB110:
 203              	.LBI110:
 204              		.file 8 "./libDaisy/src/per/dac.h"
   1:./libDaisy/src/per/dac.h **** #pragma once
   2:./libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:./libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:./libDaisy/src/per/dac.h **** 
   5:./libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:./libDaisy/src/per/dac.h **** 
   7:./libDaisy/src/per/dac.h **** namespace daisy
   8:./libDaisy/src/per/dac.h **** {
   9:./libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:./libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:./libDaisy/src/per/dac.h ****  ** 
  12:./libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:./libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:./libDaisy/src/per/dac.h ****  **
  15:./libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:./libDaisy/src/per/dac.h ****  **
  17:./libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:./libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:./libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:./libDaisy/src/per/dac.h ****  ***/
  21:./libDaisy/src/per/dac.h **** class DacHandle
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 15


  22:./libDaisy/src/per/dac.h **** {
  23:./libDaisy/src/per/dac.h ****   public:
  24:./libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:./libDaisy/src/per/dac.h ****     enum class Result
  26:./libDaisy/src/per/dac.h ****     {
  27:./libDaisy/src/per/dac.h ****         OK,
  28:./libDaisy/src/per/dac.h ****         ERR,
  29:./libDaisy/src/per/dac.h ****     };
  30:./libDaisy/src/per/dac.h **** 
  31:./libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:./libDaisy/src/per/dac.h ****     enum class Channel
  33:./libDaisy/src/per/dac.h ****     {
  34:./libDaisy/src/per/dac.h ****         ONE,
  35:./libDaisy/src/per/dac.h ****         TWO,
  36:./libDaisy/src/per/dac.h ****         BOTH,
  37:./libDaisy/src/per/dac.h ****     };
  38:./libDaisy/src/per/dac.h **** 
  39:./libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:./libDaisy/src/per/dac.h ****      **
  41:./libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:./libDaisy/src/per/dac.h ****      **
  43:./libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:./libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:./libDaisy/src/per/dac.h ****      ***/
  46:./libDaisy/src/per/dac.h ****     enum class Mode
  47:./libDaisy/src/per/dac.h ****     {
  48:./libDaisy/src/per/dac.h ****         POLLING,
  49:./libDaisy/src/per/dac.h ****         DMA,
  50:./libDaisy/src/per/dac.h ****     };
  51:./libDaisy/src/per/dac.h **** 
  52:./libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:./libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:./libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:./libDaisy/src/per/dac.h ****      ***/
  56:./libDaisy/src/per/dac.h ****     enum class BitDepth
  57:./libDaisy/src/per/dac.h ****     {
  58:./libDaisy/src/per/dac.h ****         BITS_8,
  59:./libDaisy/src/per/dac.h ****         BITS_12
  60:./libDaisy/src/per/dac.h ****     };
  61:./libDaisy/src/per/dac.h **** 
  62:./libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:./libDaisy/src/per/dac.h ****     enum class BufferState
  64:./libDaisy/src/per/dac.h ****     {
  65:./libDaisy/src/per/dac.h ****         ENABLED,
  66:./libDaisy/src/per/dac.h ****         DISABLED,
  67:./libDaisy/src/per/dac.h ****     };
  68:./libDaisy/src/per/dac.h **** 
  69:./libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:./libDaisy/src/per/dac.h ****     struct Config
  71:./libDaisy/src/per/dac.h ****     {
  72:./libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:./libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:./libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:./libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:./libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:./libDaisy/src/per/dac.h **** 
  78:./libDaisy/src/per/dac.h ****         Channel     chn;
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 16


  79:./libDaisy/src/per/dac.h ****         Mode        mode;
  80:./libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:./libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:./libDaisy/src/per/dac.h ****     };
  83:./libDaisy/src/per/dac.h **** 
  84:./libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 205              		.loc 8 84 5 is_stmt 1 view .LVU43
 206              	.LBB111:
 207              	.LBB112:
 208              		.loc 8 84 33 is_stmt 0 view .LVU44
 209 000c 0362     		str	r3, [r0, #32]
 210              	.LVL10:
 211              		.loc 8 84 33 view .LVU45
 212              	.LBE112:
 213              	.LBE111:
 214              	.LBE110:
 215              	.LBB113:
 216              	.LBI113:
  40:./libDaisy/src/hid/usb.h **** 
 217              		.loc 3 40 5 is_stmt 1 view .LVU46
  40:./libDaisy/src/hid/usb.h **** 
 218              		.loc 3 40 5 is_stmt 0 view .LVU47
 219              	.LBE113:
 220              	.LBB114:
 221              	.LBI114:
  96:./libDaisy/src/sys/system.h ****     ~System() {}
 222              		.loc 2 96 5 is_stmt 1 view .LVU48
  96:./libDaisy/src/sys/system.h ****     ~System() {}
 223              		.loc 2 96 5 is_stmt 0 view .LVU49
 224              	.LBE114:
 225              	.LBB115:
 226              	.LBI115:
 227              		.file 9 "./libDaisy/src/per/sai.h"
   1:./libDaisy/src/per/sai.h **** #pragma once
   2:./libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:./libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:./libDaisy/src/per/sai.h **** 
   5:./libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:./libDaisy/src/per/sai.h **** 
   7:./libDaisy/src/per/sai.h **** namespace daisy
   8:./libDaisy/src/per/sai.h **** {
   9:./libDaisy/src/per/sai.h **** /** 
  10:./libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:./libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:./libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:./libDaisy/src/per/sai.h ****  * 
  14:./libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:./libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:./libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:./libDaisy/src/per/sai.h ****  *
  18:./libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:./libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:./libDaisy/src/per/sai.h ****  * 
  21:./libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:./libDaisy/src/per/sai.h ****  * 
  23:./libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:./libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 17


  25:./libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:./libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:./libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:./libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:./libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:./libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:./libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:./libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:./libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:./libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:./libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:./libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:./libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:./libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:./libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:./libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:./libDaisy/src/per/sai.h ****  */
  42:./libDaisy/src/per/sai.h **** class SaiHandle
  43:./libDaisy/src/per/sai.h **** {
  44:./libDaisy/src/per/sai.h ****   public:
  45:./libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:./libDaisy/src/per/sai.h ****     struct Config
  47:./libDaisy/src/per/sai.h ****     {
  48:./libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:./libDaisy/src/per/sai.h ****         enum class Peripheral
  50:./libDaisy/src/per/sai.h ****         {
  51:./libDaisy/src/per/sai.h ****             SAI_1,
  52:./libDaisy/src/per/sai.h ****             SAI_2,
  53:./libDaisy/src/per/sai.h ****         };
  54:./libDaisy/src/per/sai.h **** 
  55:./libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:./libDaisy/src/per/sai.h ****         enum class SampleRate
  57:./libDaisy/src/per/sai.h ****         {
  58:./libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:./libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:./libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:./libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:./libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:./libDaisy/src/per/sai.h ****         };
  64:./libDaisy/src/per/sai.h **** 
  65:./libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:./libDaisy/src/per/sai.h ****         enum class BitDepth
  67:./libDaisy/src/per/sai.h ****         {
  68:./libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:./libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:./libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:./libDaisy/src/per/sai.h ****         };
  72:./libDaisy/src/per/sai.h **** 
  73:./libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:./libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:./libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:./libDaisy/src/per/sai.h ****          */
  77:./libDaisy/src/per/sai.h ****         enum class Sync
  78:./libDaisy/src/per/sai.h ****         {
  79:./libDaisy/src/per/sai.h ****             MASTER,
  80:./libDaisy/src/per/sai.h ****             SLAVE,
  81:./libDaisy/src/per/sai.h ****         };
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 18


  82:./libDaisy/src/per/sai.h **** 
  83:./libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:./libDaisy/src/per/sai.h ****         enum class Direction
  85:./libDaisy/src/per/sai.h ****         {
  86:./libDaisy/src/per/sai.h ****             TRANSMIT,
  87:./libDaisy/src/per/sai.h ****             RECEIVE,
  88:./libDaisy/src/per/sai.h ****         };
  89:./libDaisy/src/per/sai.h **** 
  90:./libDaisy/src/per/sai.h ****         Peripheral periph;
  91:./libDaisy/src/per/sai.h ****         struct
  92:./libDaisy/src/per/sai.h ****         {
  93:./libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:./libDaisy/src/per/sai.h ****         } pin_config;
  95:./libDaisy/src/per/sai.h ****         SampleRate sr;
  96:./libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:./libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:./libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:./libDaisy/src/per/sai.h ****     };
 100:./libDaisy/src/per/sai.h **** 
 101:./libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:./libDaisy/src/per/sai.h ****     enum class Result
 103:./libDaisy/src/per/sai.h ****     {
 104:./libDaisy/src/per/sai.h ****         OK,
 105:./libDaisy/src/per/sai.h ****         ERR,
 106:./libDaisy/src/per/sai.h ****     };
 107:./libDaisy/src/per/sai.h **** 
 108:./libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 228              		.loc 9 108 5 is_stmt 1 view .LVU50
 229              	.LBB116:
 230              	.LBB117:
 231              		.loc 9 108 33 is_stmt 0 view .LVU51
 232 000e C363     		str	r3, [r0, #60]
 233              	.LVL11:
 234              		.loc 9 108 33 view .LVU52
 235              	.LBE117:
 236              	.LBE116:
 237              	.LBE115:
 238              	.LBE118:
 239              	.LBE119:
   8:Blink.cpp     **** 
 240              		.loc 6 8 11 view .LVU53
 241 0010 FFF7FEBF 		b	__aeabi_atexit
 242              	.LVL12:
 243              	.L10:
 244              		.align	2
 245              	.L9:
 246 0014 00000000 		.word	.LANCHOR0
 247 0018 00000000 		.word	__dso_handle
 248 001c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 249              	.LBE97:
 250              	.LBE96:
 251              		.cfi_endproc
 252              	.LFE2579:
 254              		.section	.init_array,"aw",%init_array
 255              		.align	2
 256 0000 00000000 		.word	_GLOBAL__sub_I_hardware(target1)
 257              		.global	hardware
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 19


 258              		.section	.bss.hardware,"aw",%nobits
 259              		.align	2
 260              		.set	.LANCHOR0,. + 0
 263              	hardware:
 264 0000 00000000 		.space	64
 264      00000000 
 264      00000000 
 264      00000000 
 264      00000000 
 265              		.text
 266              	.Letext0:
 267              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 268              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 269              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 270              		.file 13 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 271              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 272              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 273              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 274              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 275              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 276              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 277              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 278              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 279              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 280              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 281              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 282              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 283              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 284              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 285              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 286              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 287              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 288              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 289              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 290              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 291              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 292              		.file 35 "./libDaisy/src/daisy_core.h"
 293              		.file 36 "./libDaisy/src/per/tim.h"
 294              		.file 37 "./libDaisy/src/util/wav_format.h"
 295              		.file 38 "./libDaisy/src/dev/max11300.h"
 296              		.file 39 "./libDaisy/src/per/gpio.h"
 297              		.file 40 "./libDaisy/src/dev/sdram.h"
 298              		.file 41 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 299              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 300              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 301              		.file 44 "<built-in>"
 302              		.file 45 "./libDaisy/src/dev/sr_595.h"
ARM GAS  C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 Blink.cpp
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:67     .text.startup.main:00000000 $t
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:75     .text.startup.main:00000000 main
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:128    .text.startup.main:00000028 $d
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:133    .text.startup._GLOBAL__sub_I_hardware:00000000 $t
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:140    .text.startup._GLOBAL__sub_I_hardware:00000000 _GLOBAL__sub_I_hardware
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:246    .text.startup._GLOBAL__sub_I_hardware:00000014 $d
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:255    .init_array:00000000 $d
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:263    .bss.hardware:00000000 hardware
C:\Users\wille\AppData\Local\Temp\ccBbCCgL.s:259    .bss.hardware:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
